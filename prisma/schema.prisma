// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id String  @id @default(uuid())
    name String 
	email String @unique
	password String
	developer Developer?
	sale Sale?

	@@map("users")
}

model Developer {
    id String  @id @default(uuid())
    name String 
	stack String
	telegram String @unique
	timeJoin DateTime?
	userId  String    @unique
  	user    User   @relation(fields: [userId], references: [id])
	report Report[]

	@@map("developers")
}

model Sale {
    id String  @id @default(uuid())
    name String 
	timeJoin DateTime?
	userId  String    @unique
  	user    User   @relation(fields: [userId], references: [id])
	workAccount WorkAccount[]

	@@map("sales")
}

model WorkAccount {
    id String  @id @default(uuid())
    name String 
	saleId  String
	isBlocked Boolean @default(false) @map("is_blocked")
  	sale    Sale   @relation(fields: [saleId], references: [id])
	customer Customer[]

	@@map("work_accounts")
}

model Customer {
    id String  @id @default(uuid())
    name String 
	accountId  String 
  	workAccount    WorkAccount   @relation(fields: [accountId], references: [id])
	rate Int
	trackInWeek Int @map("track_in_week")
	nameProject String @map("name_project")
	report Report[]

	@@map("customers")
}

model Report {
    id String  @id @default(uuid())
    track Int 
	report String
	startWork String?
	endWork String?
	customerId  String 
  	customer    Customer   @relation(fields: [customerId], references: [id])
	developerId String
	developer    Developer   @relation(fields: [developerId], references: [id])
	date String?

	@@map("reports")
}
