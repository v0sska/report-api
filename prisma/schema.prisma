// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id          String   @id @default(uuid())
    email       String   @unique
    password    String?
    role        String
    status      String   @default("Active")
    inviteToken String?
    employee    Employee?
	  sales 	    Sales?
    projectManager ProjectManager?

    @@map("users")
}

model Employee {
    id                String  @id @default(uuid())
    firstName         String  @map("first_name")
    lastName          String  @map("last_name")
    projectEngagement String  @map("project_engagement") @default("Available")
    position          String
    rate              Int
    userId            String? @unique 
    user              User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@map("employees")
}

model Sales {
   	id                String  @id @default(uuid())
    firstName         String  @map("first_name")
    lastName          String  @map("last_name")
    position          String
    rate              Int
    userId            String? @unique 
    user              User?   @relation(fields: [userId], references: [id], onDelete: Cascade)

	@@map("sales")
}


model ProjectManager {
  id         String   @id @default(uuid())
  firstName  String   @map("first_name")
  lastName   String   @map("last_name")
  position   String
  rate       Int
  userId     String?  @unique
  user       User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("project_managers")
}
