generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id          String   @id @default(uuid())
    email       String   @unique
    firstName   String  @map("first_name")
    lastName    String  @map("last_name")
    password    String?
    role        String
    status      String   @default("Active")
    position    String
    salary      Int
    phone      String?
    firstDayInCompany DateTime @default(now()) @map("first_day_in_company")
    dateOfBirth DateTime? @map("date_of_birth")
    inviteToken String?
    employee    Employee?
	  sales 	    Sales?
    projectManager ProjectManager?

    @@map("users")
}

model Employee {
    id                String  @id @default(uuid())
    projectEngagement String  @map("project_engagement") @default("Available")
    hoursPerWeek      Int     @map("hours_per_week") @default(0)
    userId            String? @unique 
    user              User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
    employeeOnProject EmployeeOnProject[]

    @@map("employees")
}

model Sales {
   	id                String  @id @default(uuid())
    userId            String? @unique 
    user              User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
    project           Project[]

	@@map("sales")
}


model ProjectManager {
  id         String   @id @default(uuid())
  userId     String?  @unique
  user       User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  project    Project[]

  @@map("project_managers")
}

model Project {
  id              String  @id @default(uuid())
  name            String
  clientName      String  @map("client_name")
  rate            Int
  hoursInWeek     Int     @map("hours_in_week")
  teamInfo        String  @map("team_info")
  status          String
  salesId          String? @map("sales_id")
  sales           Sales?  @relation(fields: [salesId], references: [id], onDelete: Cascade)
  projectManagerId String? @map("project_manager_id")
  projectManager ProjectManager? @relation(fields: [projectManagerId], references: [id], onDelete: Cascade)
  employeeOnProject EmployeeOnProject[]


  @@map("projects")
}

model EmployeeOnProject {
  employeeId  String @map("employee_id")
  employee    Employee @relation(fields: [employeeId], references: [id])
  projectId   String @map("project_id")
  project     Project @relation(fields: [projectId], references: [id])

  @@id([employeeId, projectId])
  @@map("employees_on_projects")
}
